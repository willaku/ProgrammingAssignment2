noise <- function(n,mean,sd) {}
noise <- function(n,mean,sd) {
rnorm(n,mean,sd)
}
noise(5,1,2)
noise(5,1,2)
noise(1:5)
noise(1:5,1:5,2)
mapply(noise,1:5,1:5,2)
?split
x <- c(norm(10), runif(10), rnorm(10,1))
x <- (c(norm(10), runif(10), rnorm(10,1))
)
x <- c(norm(10), runif(10), rnorm(10,1))
x
x <- c(norm(10), runif(10), rnorm(10,1))
f <- gl(3,10)
f
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
s
lapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")]))
sapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")]))
sapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")],na.rm=TRUE))
x<- rnorm(10)
x
f1 <- gl(2,5)
f1
f2 <- gl(5,2)
f2
x
interaction(f1,f2)
str(split(x,list(f1,f2)))
str(split(x,list(f1,f2),drop=TRUE))
log(-1)
printmessage <- function(x) {
if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
}
printmessage(3)
printmessage(0)
printmessage <- function(x) {
if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmessage(0)
printmessage(3)
printmessage(NA)
printmessage <- function(x) {
if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
}
printmessage(NA)
mean(x)
mean(x)
traceback()
lm(y-x)
traceback()
debug(lm)
lm(y-x)
options(error=recover)
read.csv("nosuchfile")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector
makeVector()
